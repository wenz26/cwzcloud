# 微服务端口
server:
  port: 9527

# 微服务名称
spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      routes: # 以下写路由的详细信息，可以写多个
        - id: payment_routh # payment_routh    # 路由的ID，没有固定规则但要求唯一，建议配合服务名
          # uri: http://localhost:8001 # 匹配后提供服务的路地址
          uri: lb://CLOUD-PAYMENT-SERVICE
          predicates:  # 断言
            - Path=/payment/get/**   # 断言，路径相匹配的进行路由

        - id: payment_routh2 # payment_routh2    # 路由的ID，没有固定规则但要求唯一，建议配合服务名
          # uri: http://localhost:8001 # 匹配后提供服务的路地址
          uri: lb://CLOUD-PAYMENT-SERVICE
          predicates:  # 断言
            - Path=/payment/lb/**    # 断言，路径相匹配的进行路由
#            - After=2020-04-11T14:33:04.927+08:00[Asia/Shanghai]  # 在这个时间之后访问才有用
#            - Cookie=username,zzyy  # 符合这个cookie才运行
#            - Header=X-Request-Id, \d+  # 请求头要有X-Request-Id属性并且值为整数的正则表达式

      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名进行路由


# eureka client配置
eureka:
  client:
    # 表示是否将自己注册进EurekaServer默认为true
    register-with-eureka: true
    # 是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      # defaultZone: http://localhost:7001/eureka
      # eureka服务端集群版
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
  instance:
    instance-id: cloud-gateway-service9527
    # 访问路径可以显示IP地址
    prefer-ip-address: true

